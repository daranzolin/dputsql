---
output: github_document
---

<!-- README.md is generated from README.Rmd. Please edit that file -->

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>",
  fig.path = "man/figures/README-",
  out.width = "100%"
)
```

# dputsql

<!-- badges: start -->
<!-- badges: end -->

The goal of dputsql is to create `CREATE TABLE` and `INSERT INTO` SQL statements directly from objects within R. No DBI connection required. Outputs have not been exhaustively tested against numerous engines. Works mostly with SQLite and MySQL formatting. 

## Installation

You can install the development version of dputsql like so:

``` r
remotes::install_github("daranzolin/dputsql")
```

## Example

The simplest use to call `dputsql` on any dataframe:

```{r example}
library(dputsql)
dputsql(mtcars)
```

For more control, you can create the table and specify constraints like so:

```{r}
library(charlatan)
suppressPackageStartupMessages(library(tidyverse))

df <- ch_generate("name", "job", "phone_number", "currency", "color_name") |>
  mutate(id = row_number(), .before = 1) |>
  mutate(varx = sample(1:100, 10))

df |> 
  create_table() |> 
  primary_key("id") |> 
  not_null(c("name", "job")) |> 
  unique_vals(c("phone_number", "job")) |> 
  default_vals(list(currency = "ENG")) |> 
  check_vals(list(varx = "varx > 0")) |> 
  add_insert_statement()
```

Write the output to a file, or send it to your clipboard:

```{r eval = FALSE}
dputsql(mtcars) |> 
  write_ddl_file("CREATE.sql")

dputsql(mtcars) |> 
  ddl_to_clipboard()
```

